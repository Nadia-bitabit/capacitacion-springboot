spring.application.name=demo
# URL de conexión a PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=v;J48+rXxn
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate
# Estrategia para generar tablas
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=create
# Opcional: mostrar SQL en logs
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Dialecto de Hibernate
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


# 1. Conexión al Broker de Kafka
spring.kafka.bootstrap-servers=localhost:9092

# 2. Configuración del Consumidor (Necesario para escuchar)
spring.kafka.consumer.group-id=grupo_transacciones
spring.kafka.consumer.auto-offset-reset=earliest

# 3. Nombre del Topic de tu aplicación (usarlo en el Productor y Consumidor)
app.kafka.topic.transacciones=transacciones
spring.kafka.producer.bootstrap-servers=localhost:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# Configuración Mínima del Consumidor (Consumer)
spring.kafka.consumer.bootstrap-servers=localhost:9092
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer



